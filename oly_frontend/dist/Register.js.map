{"version":3,"mappings":"qaAGO,MAAMA,GACqBC,GAC/BC,GAAmB,CAEZ,QADSA,EAAE,OACG,aAAa,MAAM,EAEnCC,GAAQC,EAAIH,EAAM,UAAUE,GAAM,GACpCF,EAAK,cAAcE,CAAe,CAEtC,4rCCsLI,QAAUE,EAAI,UAAU,EACxBC,EAAQC,IACRC,EAAWH,EAAI,EAAK,EACpBI,EAAOC,EAAUC,EAAMC,CAAK,EAC5BC,EAAYC,IACZC,EAAQC,IAERC,EAAoBC,GAAqB,CAC7C,OAAQ,IACNC,cAGE,mGAEL,EAEKC,EAAmBC,GAAO,CAC9B,KAAMC,IAAS,SAAS,8BAA8B,EACtD,SAAUA,IAAS,SAAS,4BAA4B,EACxD,MAAOA,EAAO,EACX,MAAM,oCAAoC,EAC1C,SAAS,oCAAoC,EAChD,SAAUA,IAAS,SAAS,+BAA+B,EAC3D,sBAAuBA,EAAO,EAC3B,SAAS,8BAA8B,EACvC,KAAK,CACJ,KAAM,mBACN,UAAW,GACX,OAAQ,CAAC,EACT,QAAS,4CACT,KAAM,SAAUC,EAAO,CACd,WAAU,KAAK,OAAO,QAC/B,EACD,EACH,cAAeC,GAAQ,EACpB,SAAS,2BAA2B,EACpC,MAAM,CAAC,EAAI,EAAG,2BAA2B,EAC7C,EAEKvB,EAAOwB,GAAQ,CACnB,mBACA,cAAe,CACb,KAAM,GACN,SAAU,GACV,MAAOrB,EAAIW,EAAO,cAAe,EAAE,GAAK,GACxC,SAAU,GACV,sBAAuB,GACvB,cAAe,EACjB,EACD,EAEKZ,EAAOuB,EAAS,OAAQ,OAAW,CACvC,sBAAuB,GACxB,EACKC,EAAWD,EAAS,WAAY,OAAW,CAC/C,sBAAuB,GACxB,EACKE,EAAQF,EAAS,QAAS,OAAW,CACzC,sBAAuB,GACxB,EACKG,EAAWH,EAAS,WAAY,OAAW,CAC/C,sBAAuB,GACxB,EACKI,EAAwBJ,EAAS,wBAAyB,OAAW,CACzE,sBAAuB,GACxB,EACKK,EAAgBL,EAAkB,gBAAiB,OAAW,CAClE,sBAAuB,GACvB,gBAAiB,GAClB,EAaKM,EAAcC,GAAS,KAC3B,QAAQ,IAAI,MAAOhC,EAAK,KAAK,MAAM,KAAK,EACxC,QAAQ,IAAI,MAAO8B,EAAc,MAAM,KAAK,EACrC9B,EAAK,KAAK,MAAM,OAAS8B,EAAc,MAAM,MACrD,EAEKG,EAA6B7B,EAAI,EAAK,EAEtC8B,EAAW,MAAOjC,GAAa,CAGnC,GAFAA,EAAE,eAAe,EAEbM,EAAS,MAAO,OACpB,KAAM,CAAE,OAAU,QAAMP,EAAK,SAAS,EAEtC,GAAI,CAACmC,EAAO,CACJ9B,QACJ,oFACA,CACE,QAAS,IACT,GAAI+B,EAAQ,KACd,GAGF,MACF,CAEA,GACE,EACEC,IACCC,GAAgB1B,GAAc,MAAMA,EAAU,mBAG3C,eACJ,wEACA,CACE,GAAIwB,EAAQ,MACZ,QAAS,GACX,GAEK,GAGT7B,EAAS,MAAQ,GACjBF,EAAM,KAAK,sBAAuB,CAChC,GAAI+B,EAAQ,MACZ,QAAS,EACV,EAEG,IAEF,MAAMG,EAAQD,EACV,MAAM1B,iBAAW,iBAAiB,aAClC,QAEJ,IAAI4B,EAAW,MAAMC,GAAI,KAAK,WAAY,CACxC,KAAM,CACJ,GAAGzC,EAAK,OACR,UAAWE,EAAK,MAAM,MACtB,SAAUwB,EAAS,MAAM,MACzB,gBAAiBa,CACnB,EACD,EAEG,KAAS,SAAW,IAAK,CACrB,QAAQ,MAAMC,EAAS,OAEzBE,GAAqBC,CAAI,IACtBnC,WAASmC,EAAK,KAAK,KAAK,EAC7BnC,EAAK,SAAS,CAAE,SAAUmC,EAAK,KAAK,KAAM,EAC1CV,EAA2B,MAAQ,GAC3B,YAAI,MAAOzB,EAAK,KAAK,EACrB,YAAI,MAAOA,CAAI,EAE3B,CAEMH,UAAQ+B,EAAQ,KAAK,QACpBnC,GACDI,UAAQ+B,EAAQ,KAAK,EACtBnC,GAAG,OAAO,SAAS,UAEvB,SAAY,CACX,GAAIA,aAAa2C,GAAW,CACpB,QAASzC,EAAIF,EAAG,iBAAiB,EACvC,GAAI4C,GAAU,IAAK,CACjB,MAAMC,EAAU,MAAM7C,EAAE,SAAS,KAAK,EAElC,GADI,YAAI,SAAU4C,CAAM,EACxBE,GAA0BD,CAAO,EAC7BzC,QAAMyC,EAAQ,QAAS,CAC3B,GAAIV,EAAQ,MACZ,QAAS,IACV,MACH,IAAWY,GAAgBF,CAAO,EAChC,OAAOzC,EAAM,MAAMyC,EAAQ,MAAM,QAAS,CACxC,GAAIV,EAAQ,MACb,EACH,GAAWa,GAAqBH,CAAO,EAC9B,SAAM,MAAM,sBAAuB,CACxC,GAAIV,EAAQ,MACb,EACH,SACSnC,aAAaiD,GACtB,OAAO7C,EAAM,MACX,yFACA,CACE,GAAI+B,EAAQ,KACd,EAGN,CAQA,QAAQ,IAAInC,CAAC,KAEjB,CAEMI,UAAQ+B,EAAQ,KAAK,EAC3B7B,EAAS,MAAQ,IAGb4C,EAAepD,GAAoBC,CAAI,EAE7CoD,GAAU,IAAM,CACV5C,EAAK,sBAAwB6C,GAAqB,QACpD7C,EAAK,SAAS,CACZ,MAAO,GACP,oBAAqB,KACrB,KAAMA,EAAK,OAAS,aAAe,WAAaA,EAAK,KACtD,CACH,CACD,EAEK,QAAeJ,EAAI,EAAK,EACxBkD,EAAsBlD,EAAI,EAAK","names":["createChangeHandler","form","e","name","get","ref","toast","useToast","isSaving","user","getModule","User","store","recaptcha","useReCaptcha","route","useRoute","EmailVerification","defineAsyncComponent","__vitePreload","validationSchema","object","string","value","boolean","useForm","useField","lastName","email","password","password_confirmation","privacyPolicy","isFormValid","computed","hasSentVerificationMessage","onSubmit","valid","toastId","isDevelopment","isProduction","token","response","api","hasSentTokenResponse","data","HTTPError","status","errResp","isValidationErrorResponse","isErrorResponse","isAuthorizationError","TimeoutError","handleChange","onMounted","TokenCreationReasons","showConfirmPassword"],"sources":["../src/utils/validator.ts","../src/views/Register.vue"],"sourcesContent":["import { get } from \"lodash-es\";\nimport { FormContext } from \"vee-validate\";\n\nexport const createChangeHandler =\n  <T extends Record<string, any>>(form: FormContext<T>) =>\n  (e: Event): void => {\n    const target = e.target as HTMLElement;\n    const name = target.getAttribute(\"name\");\n\n    if (name && get(form, `values.${name}`)) {\n      form.validateField(name as keyof T);\n    }\n  };\n","<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <EmailVerification v-if=\"hasSentVerificationMessage\" />\n  <div v-else class=\"view entry register\">\n    <div class=\"header_section\">\n      <h1>\n        Create <span class=\"highlight\">Patient</span>/<span class=\"highlight\"\n          >Therapist</span\n        >\n        Account\n      </h1>\n      <p>\n        Already have an account?\n        <span class=\"highlight\" @click.prevent=\"\">Sign in</span>\n      </p>\n    </div>\n    <form @submit=\"onSubmit\" @change=\"handleChange\">\n      <div class=\"grouped\">\n        <div class=\"group small\">\n          <label for=\"name\">First Name</label>\n          <span\n            class=\"input-icon\"\n            :class=\"{ 'has-error': name.errorMessage.value }\"\n          >\n            <input\n              id=\"name\"\n              v-model=\"name.value.value\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"First Name\"\n            />\n            <!-- <span class=\"edge-text\"> Last name </span> -->\n          </span>\n          <div v-if=\"name.errorMessage.value\" class=\"error\">\n            {{ name.errorMessage.value }}\n          </div>\n        </div>\n\n        <div class=\"group small\">\n          <label for=\"name\">Last Name</label>\n          <span\n            class=\"input-icon\"\n            :class=\"{ 'has-error': lastName.errorMessage.value }\"\n          >\n            <input\n              id=\"name\"\n              v-model=\"lastName.value.value\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Last Name\"\n            />\n            <!-- <span class=\"edge-text\"> Last name </span> -->\n          </span>\n          <div v-if=\"lastName.errorMessage.value\" class=\"error\">\n            {{ lastName.errorMessage.value }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"group\">\n        <label for=\"register_email\">email</label>\n        <span\n          class=\"input-icon\"\n          :class=\"{ 'has-error': email.errorMessage.value }\"\n        >\n          <input\n            id=\"register_email\"\n            v-model=\"email.value.value\"\n            type=\"email\"\n            name=\"email\"\n          />\n          <Icon class=\"icon\" data=\"@/assets/icons/mail.svg?icon\" />\n        </span>\n        <div v-if=\"email.errorMessage.value\" class=\"error\">\n          {{ email.errorMessage.value }}\n        </div>\n      </div>\n      <div class=\"group\">\n        <label for=\"register_password\">password</label>\n        <span\n          class=\"input-icon\"\n          :class=\"{ 'has-error': password.errorMessage.value }\"\n        >\n          <input\n            id=\"register_password\"\n            v-model=\"password.value.value\"\n            :type=\"showPassword ? 'text' : 'password'\"\n            name=\"password\"\n          />\n          <Icon\n            class=\"icon toggle\"\n            :data=\"getPasswordIcon(showPassword)\"\n            @click=\"showPassword = !showPassword\"\n          />\n        </span>\n        <div v-if=\"password.errorMessage.value\" class=\"error\">\n          {{ password.errorMessage.value }}\n        </div>\n      </div>\n      <div class=\"group\">\n        <label for=\"register_c_password\">password confirmation</label>\n        <span\n          class=\"input-icon\"\n          :class=\"{ 'has-error': password_confirmation.errorMessage.value }\"\n        >\n          <input\n            id=\"register_c_password\"\n            v-model=\"password_confirmation.value.value\"\n            :type=\"showConfirmPassword ? 'text' : 'password'\"\n            name=\"cpassword\"\n          />\n          <Icon\n            class=\"icon toggle\"\n            :data=\"getPasswordIcon(showConfirmPassword)\"\n            @click=\"showConfirmPassword = !showConfirmPassword\"\n          />\n        </span>\n        <div v-if=\"password_confirmation.errorMessage.value\" class=\"error\">\n          {{ password_confirmation.errorMessage.value }}\n        </div>\n      </div>\n\n      <div class=\"privacy_policy\">\n        <label for=\"privacy_policy\">\n          <input\n            id=\"privacy_policy\"\n            v-model=\"privacyPolicy.value.value\"\n            type=\"checkbox\"\n            name=\"privacyPolicy\"\n            :true-value=\"true\"\n            :false-value=\"false\"\n          />\n          <!-- <Icon class=\"icon\" :data=\"privacyPolicyIcon\" original :fill=\"false\" /> -->\n          <span class=\"text\">\n            Signing in or logging in the Platform, you automaticaaly accept our\n            <a\n              href=\"https://www.iubenda.com/privacy-policy/71399601\"\n              class=\"iubenda-nostyle no-brand iubenda-noiframe iubenda-embed iub-legal-only iubenda-noiframe link\"\n              title=\"Privacy Policy \"\n            >\n              Privacy Policy\n            </a>\n            Privacy Policy and Terms and Conditions\n            <span v-if=\"privacyPolicy.errorMessage.value\" class=\"error\">\n              {{ privacyPolicy.errorMessage.value }}\n            </span>\n          </span>\n        </label>\n      </div>\n      <!-- <div class=\"information\">\n        This site is protected by reCAPTCHA and the Google\n        <a href=\"https://policies.google.com/privacy\"\n          >Privacy Policy</a\n        >\n        and\n        <a href=\"https://policies.google.com/terms\"\n          >Terms of Service</a\n        >\n        apply.\n      </div> -->\n      <button class=\"submitBtn\" type=\"submit\" :disabled=\"!isFormValid\">\n        Register\n      </button>\n      <span class=\"create\">\n        Already have an account?\n        <router-link class=\"link\" :to=\"{ name: 'login' }\"> Login </router-link>\n      </span>\n    </form>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, onMounted, defineAsyncComponent } from \"vue\";\nimport { useForm, useField } from \"vee-validate\";\nimport { object, string, boolean } from \"yup\";\nimport { createChangeHandler } from \"@/utils/validator\";\nimport { get } from \"lodash-es\";\nimport { useToast } from \"vue-toastification\";\nimport { api } from \"@/utils/requests\";\nimport {\n  isErrorResponse,\n  isValidationErrorResponse,\n  TokenCreationReasons,\n  hasSentTokenResponse,\n  isAuthorizationError,\n} from \"@/types/logged\";\nimport { getModule } from \"vuex-module-decorators\";\nimport User from \"@/store/modules/User\";\nimport { store } from \"@/store\";\nimport { HTTPError, TimeoutError } from \"ky-universal\";\nimport { useReCaptcha } from \"vue-recaptcha-v3\";\nimport { getPasswordIcon, isDevelopment, isProduction } from \"@/utils/helpers\";\nimport { useRoute } from \"vue-router\";\n\nconst toastId = ref(\"register\");\nconst toast = useToast();\nconst isSaving = ref(false);\nconst user = getModule(User, store);\nconst recaptcha = useReCaptcha();\nconst route = useRoute();\n\nconst EmailVerification = defineAsyncComponent({\n  loader: () =>\n    import(\n      /* webpackMode: \"lazy\" */\n      /* webpackPrefetch: true */\n      \"@/components/emailVerification.vue\"\n    ),\n});\n\nconst validationSchema = object({\n  name: string().required(\"Please input your first name\"),\n  lastName: string().required(\"Please input you last name\"),\n  email: string()\n    .email(\"Please input a valid email address\")\n    .required(\"Please input a valid email address\"),\n  password: string().required(\"Please input a valid password\"),\n  password_confirmation: string()\n    .required(\"Please confirm your password\")\n    .test({\n      name: \"confirm_password\",\n      exclusive: true,\n      params: {},\n      message: \"Password confirmation must match password\",\n      test: function (value) {\n        return value === this.parent.password;\n      },\n    }),\n  privacyPolicy: boolean()\n    .required(\"Please accept to continue\")\n    .oneOf([true], \"Please accept to continue\"),\n});\n\nconst form = useForm({\n  validationSchema,\n  initialValues: {\n    name: \"\",\n    lastName: \"\",\n    email: get(route, \"query.email\", \"\") || \"\",\n    password: \"\",\n    password_confirmation: \"\",\n    privacyPolicy: false,\n  },\n});\n\nconst name = useField(\"name\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst lastName = useField(\"lastName\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst email = useField(\"email\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst password = useField(\"password\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst password_confirmation = useField(\"password_confirmation\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst privacyPolicy = useField<boolean>(\"privacyPolicy\", undefined, {\n  validateOnValueUpdate: true,\n  validateOnMount: true,\n});\n\n// const privacyPolicyIcon = computed(() =>\n//   privacyPolicy.value.value\n//     ? \"@/assets/icons/checkbox-checked.svg?icon\"\n//     : \"@/assets/icons/checkbox.svg?icon\"\n// );\n\n// const termsOfUse = useField<boolean>(\"termsOfUse\", undefined, {\n//   validateOnValueUpdate: true,\n//   validateOnMount: true,\n// });\n\nconst isFormValid = computed(() => {\n  console.log(\"log\", form.meta.value.valid);\n  console.log(\"log\", privacyPolicy.value.value);\n  return form.meta.value.valid && privacyPolicy.value.value;\n});\n\nconst hasSentVerificationMessage = ref(false);\n\nconst onSubmit = async (e: Event) => {\n  e.preventDefault();\n\n  if (isSaving.value) return;\n  const { valid } = await form.validate();\n\n  if (!valid) {\n    toast.error(\n      \"Ooops... some input / selection is invalid. Please verify inputed / selected data\",\n      {\n        timeout: 7000,\n        id: toastId.value,\n      }\n    );\n\n    return;\n  }\n\n  if (\n    !(\n      isDevelopment ||\n      (isProduction && recaptcha && (await recaptcha.recaptchaLoaded()))\n    )\n  ) {\n    toast.error(\n      \"Ooops.. cannot submit request at this time.. PLease refresh this page\",\n      {\n        id: toastId.value,\n        timeout: 5000,\n      }\n    );\n    return false;\n  }\n\n  isSaving.value = true;\n  toast.info(\"Saving user data...\", {\n    id: toastId.value,\n    timeout: 0,\n  });\n\n  try {\n    // const name = form.values.name?.split(' ');\n    const token = isProduction\n      ? await recaptcha?.executeRecaptcha(\"register\")\n      : \"token\";\n\n    let response = await api.post(\"register\", {\n      json: {\n        ...form.values,\n        firstName: name.value.value,\n        lastName: lastName.value.value,\n        \"g-captcha-key\": token,\n      },\n    });\n\n    if (response.status === 200) {\n      const data = (await response.json()) as Record<string, unknown>;\n\n      if (hasSentTokenResponse(data)) {\n        user.setToken(data.data.token);\n        user.setState({ userData: data.data.user });\n        hasSentVerificationMessage.value = true;\n        console.log(\"log\", user.token);\n        console.log(\"log\", user);\n      }\n    }\n\n    toast.dismiss(toastId.value);\n  } catch (e: unknown) {\n    toast.dismiss(toastId.value);\n    if (!e) window.location.reload();\n\n    (async () => {\n      if (e instanceof HTTPError) {\n        const status = get(e, \"response.status\");\n        if (status >= 400) {\n          const errResp = await e.response.json();\n          console.log(\"status\", status);\n          if (isValidationErrorResponse(errResp)) {\n            toast.error(errResp.message, {\n              id: toastId.value,\n              timeout: 4000,\n            });\n          } else if (isErrorResponse(errResp)) {\n            return toast.error(errResp.error.message, {\n              id: toastId.value,\n            });\n          } else if (isAuthorizationError(errResp)) {\n            return toast.error(\"Authorization Error\", {\n              id: toastId.value,\n            });\n          }\n        } else if (e instanceof TimeoutError) {\n          return toast.error(\n            \"Ooops.. An error occured while sending request.. PLease check your internet connection\",\n            {\n              id: toastId.value,\n            }\n          );\n        }\n      }\n      // toast.error(\n      //   \"An error occurred while creating account. Please ensure that your email address has been registered.\",\n      //   {\n      //     id: toastId.value,\n      //   }\n      // );\n\n      console.dir(e);\n    })();\n  }\n\n  toast.dismiss(toastId.value);\n  isSaving.value = false;\n};\n\nconst handleChange = createChangeHandler(form);\n\nonMounted(() => {\n  if (user.tokenCreationReason !== TokenCreationReasons.SIGNUP) {\n    user.setState({\n      email: \"\",\n      tokenCreationReason: null,\n      mode: user.mode === \"token-sent\" ? \"unlogged\" : user.mode,\n    });\n  }\n});\n\nconst showPassword = ref(false);\nconst showConfirmPassword = ref(false);\n</script>\n\n<style lang=\"scss\" scoped>\n@use \"@/assets/scss/colors.scss\" as color;\n@use \"sass:color\" as sasscolor;\n@use \"@/assets/scss/_breakpoints.scss\" as breakpoint;\n\n::-webkit-scrollbar {\n  width: 20px;\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 5px grey;\n  border-radius: 10px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: rgba(255, 255, 255, 0.4);\n  border-radius: 10px;\n}\n\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: color.$ash-7;\n}\n\n.view.entry.register {\n  width: 70%;\n  margin: 0 auto;\n  overflow: hidden;\n  overflow-y: auto;\n  padding: 250px 0 0 30px;\n\n  > .header_section {\n    margin-top: 140px;\n    width: 100%;\n    h1 {\n      font-weight: bold;\n\n      > .highlight {\n        color: color.$main-green;\n      }\n    }\n    > p {\n      font-weight: 600;\n      > .highlight {\n        color: color.$purple;\n        cursor: pointer;\n      }\n    }\n  }\n  > form {\n    width: 100%;\n    // flex-direction: column;\n    // align-items: center;\n    padding: 0 10px 0 0;\n    overflow: hidden;\n    overflow-y: auto;\n    height: calc(80vh - 150px);\n\n    @include breakpoint.respond-below(sm) {\n      margin: 0;\n    }\n\n    > * {\n      display: flex;\n      width: 100%;\n      margin: 30px 0 0 0;\n    }\n\n    > .create {\n      justify-content: center;\n      color: color.$black-1;\n      border-radius: 10px;\n      font-size: 14px;\n      white-space: nowrap;\n\n      > .link {\n        display: inline-flex;\n        margin: 0 0 0 5px;\n        color: color.$purple;\n        text-decoration: none;\n      }\n    }\n\n    > .privacy_policy,\n    > .terms_of_use {\n      position: relative;\n      margin: 30px 0 0 0;\n      display: flex;\n      flex-wrap: nowrap;\n      justify-content: space-between;\n      width: 100%;\n\n      > * {\n        display: inline-flex;\n        justify-content: flex-start;\n        align-items: center;\n      }\n\n      > label {\n        color: color.$brown-1;\n        font-size: 14px;\n        cursor: pointer;\n\n        // > input {\n        //   display: inline-flex;\n        //   position: absolute;\n        //   opacity: 0;\n        //   z-index: 0;\n        // }\n\n        // > .icon {\n        //   display: inline-flex;\n        //   min-width: 16px;\n        //   max-width: 16px;\n        //   min-height: 16px;\n        //   max-height: 16px;\n        //   z-index: 1;\n        //   transform: scale(0.9);\n        //   margin: 0 10px 0 0;\n        //   flex-shrink: 0;\n        //   border: 1px solid #c85310;\n        //   border-radius: 3.5px;\n\n        //   @include breakpoint.respond-below(xi) {\n        //     margin: 0 5px 0 0;\n        //   }\n\n        //   rect {\n        //     stroke: none;\n        //   }\n        // }\n\n        > .text {\n          color: rgba(color.$black-1, 0.8);\n\n          > .link {\n            cursor: pointer;\n            outline: initial;\n            color: color.$purple;\n            font-size: 14px;\n            text-transform: capitalize;\n            text-decoration: underline;\n\n            &:hover {\n              color: rgba(color.$brown-1, 1);\n            }\n          }\n\n          > .error,\n          > .info {\n            display: flex;\n            width: 100%;\n            justify-content: flex-start;\n            align-items: center;\n            font-size: 12px;\n            font-weight: normal;\n            color: rgba(color.$ash-1, 0.7);\n            margin: 8px 0 0 0;\n            flex-wrap: wrap;\n          }\n\n          > .error {\n            color: color.$red-1;\n          }\n        }\n      }\n    }\n\n    > .grouped {\n      display: flex;\n      justify-content: space-between;\n      > .group {\n        flex-direction: column;\n\n        &.small {\n          width: 46%;\n        }\n\n        > * {\n          display: flex;\n          width: 100%;\n          justify-content: flex-start;\n        }\n\n        > label {\n          margin: 0;\n          font-weight: normal;\n          text-transform: capitalize;\n          font-size: 14px;\n          font-weight: 600;\n\n          @include breakpoint.respond-below(sm) {\n            font-size: 16px;\n          }\n        }\n\n        > .input-icon {\n          border: none;\n          position: relative;\n          align-items: center;\n          margin: 6px 0 0 0;\n\n          > input {\n            width: 100%;\n            height: 50px;\n            padding: 0 0 0 30px;\n            font-size: 13px;\n            color: color.$ash-1;\n            border: 1px solid color.$ash-7;\n            border-radius: 7px;\n            transition: all 0.3s ease-in-out;\n            outline: initial;\n\n            &:focus {\n              box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n            }\n\n            &:not(:placeholder-shown) {\n              & ~ .edge-text {\n                display: none;\n              }\n            }\n          }\n\n          > .icon {\n            width: 20px;\n            height: 20px;\n            position: absolute;\n            right: 30px;\n            color: color.$ash-2;\n            transition: all 0.3s ease-in-out;\n\n            &.toggle {\n              cursor: pointer;\n            }\n          }\n\n          > .edge-text {\n            padding: 3px;\n            position: absolute;\n            right: 30px;\n            font-size: 13px;\n            display: flex;\n            color: color.$ash-1;\n            text-transform: capitalize;\n          }\n\n          &.has-error {\n            > input {\n              border-color: color.$red-1;\n            }\n\n            > .icon {\n              color: color.$red-1;\n            }\n          }\n        }\n\n        > .error {\n          display: flex;\n          width: 100%;\n          justify-content: flex-start;\n          align-items: center;\n          font-size: 12px;\n          font-weight: normal;\n          color: color.$red-1;\n          margin: 8px 0 0 0;\n          flex-wrap: wrap;\n        }\n      }\n    }\n\n    > .group {\n      flex-direction: column;\n\n      &.small {\n        width: 46%;\n      }\n\n      > * {\n        display: flex;\n        width: 100%;\n        justify-content: flex-start;\n      }\n\n      > label {\n        margin: 0;\n        font-weight: normal;\n        text-transform: capitalize;\n        font-size: 14px;\n        font-weight: 600;\n\n        @include breakpoint.respond-below(sm) {\n          font-size: 16px;\n        }\n      }\n\n      > .input-icon {\n        border: none;\n        position: relative;\n        align-items: center;\n        margin: 6px 0 0 0;\n\n        > input {\n          width: 100%;\n          height: 50px;\n          padding: 0 0 0 30px;\n          font-size: 13px;\n          color: color.$ash-1;\n          border: 1px solid color.$ash-7;\n          border-radius: 7px;\n          transition: all 0.3s ease-in-out;\n          outline: initial;\n\n          &:focus {\n            box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n          }\n\n          &:not(:placeholder-shown) {\n            & ~ .edge-text {\n              display: none;\n            }\n          }\n        }\n\n        > .icon {\n          width: 20px;\n          height: 20px;\n          position: absolute;\n          right: 30px;\n          color: color.$ash-2;\n          transition: all 0.3s ease-in-out;\n\n          &.toggle {\n            cursor: pointer;\n          }\n        }\n\n        > .edge-text {\n          padding: 3px;\n          position: absolute;\n          right: 30px;\n          font-size: 13px;\n          display: flex;\n          color: color.$ash-1;\n          text-transform: capitalize;\n        }\n\n        &.has-error {\n          > input {\n            border-color: color.$red-1;\n          }\n\n          > .icon {\n            color: color.$red-1;\n          }\n        }\n      }\n\n      > .error {\n        display: flex;\n        width: 100%;\n        justify-content: flex-start;\n        align-items: center;\n        font-size: 12px;\n        font-weight: normal;\n        color: color.$red-1;\n        margin: 8px 0 0 0;\n        flex-wrap: wrap;\n      }\n    }\n\n    > .information {\n      width: 100%;\n      background-color: color.$ash-3;\n      font-size: 13px;\n      justify-content: center;\n      align-items: center;\n      text-align: center;\n      color: color.$ash-1;\n      padding: 10px 20px;\n      flex-wrap: wrap;\n\n      > a {\n        margin: 0 5px;\n        color: color.$main-green;\n      }\n    }\n\n    > .submitBtn {\n      width: 100%;\n      margin: 40px 0 0 0;\n      justify-content: center;\n      align-items: center;\n      background-color: color.$main-green;\n      color: #fff;\n      border-radius: 10px;\n      font-size: 17px;\n      white-space: nowrap;\n      text-transform: capitalize;\n      padding: 15px;\n      outline: initial;\n      border: initial;\n      transition: all 0.3s ease-in-out;\n      cursor: pointer;\n\n      &:disabled {\n        background-color: color.$ash-3;\n        color: color.$black-1;\n        cursor: not-allowed;\n      }\n\n      &:hover:not(:disabled) {\n        box-shadow: 1px 1px 5px 0 color.$ash-1;\n      }\n\n      @include breakpoint.respond-below(msl) {\n        width: 100%;\n        font-size: 16px;\n      }\n\n      @include breakpoint.respond-below(sm) {\n        font-size: 16px;\n      }\n    }\n  }\n}\n</style>\n"],"file":"Register.js"}