{"version":3,"file":"account.js","sources":["../src/components/Account/AddressInfo.vue","../src/views/Patient/account.vue"],"sourcesContent":["<template>\n  <div class=\"view entry accountinfo\">\n    <div class=\"basic_info\">\n      <p>\n        <span class=\"basic\">Address info</span>\n      </p>\n      <div class=\"form\">\n        <div class=\"grouped\">\n          <div class=\"group small\">\n            <label for=\"name\">Your Country</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': country.errorMessage.value }\"\n            >\n              <input\n                id=\"name\"\n                v-model=\"country.value.value\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First Name\"\n              />\n              <!-- <span class=\"edge-text\"> Last name </span> -->\n            </span>\n            <div v-if=\"country.errorMessage.value\" class=\"error\">\n              {{ country.errorMessage.value }}\n            </div>\n          </div>\n\n          <div class=\"group small\">\n            <label for=\"name\">Your City</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': city.errorMessage.value }\"\n            >\n              <input\n                id=\"city\"\n                v-model=\"city.value.value\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Last Name\"\n              />\n              <!-- <span class=\"edge-text\"> Last name </span> -->\n            </span>\n            <div v-if=\"city.errorMessage.value\" class=\"error\">\n              {{ city.errorMessage.value }}\n            </div>\n          </div>\n        </div>\n        <div class=\"grouped\">\n          <div class=\"group small\">\n            <label for=\"name\">Street and number</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': street.errorMessage.value }\"\n            >\n              <input\n                id=\"username\"\n                v-model=\"street.value.value\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Street and NumberP\"\n              />\n              <!-- <span class=\"edge-text\"> Last name </span> -->\n            </span>\n            <div v-if=\"street.errorMessage.value\" class=\"error\">\n              {{ street.errorMessage.value }}\n            </div>\n          </div>\n          <div class=\"group small\">\n            <label for=\"name\">ZipCode</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': zipcode.errorMessage.value }\"\n            >\n              <input\n                id=\"username\"\n                v-model=\"zipcode.value.value\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Street and NumberP\"\n              />\n              <!-- <span class=\"edge-text\"> Last name </span> -->\n            </span>\n            <div v-if=\"zipcode.errorMessage.value\" class=\"error\">\n              {{ zipcode.errorMessage.value }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"btn\">\n          <button class=\"cancel\">Cancel</button>\n          <button class=\"save\">Save Changes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { useForm, useField } from \"vee-validate\";\nimport { object, string } from \"yup\";\n// import { DatePicker } from \"v-calendar\";\n// import { get, isArray, isEmpty, omit, values, zip } from \"lodash-es\";\nimport isNumeric from \"fast-isnumeric\";\nconst validationSchema = object({\n  city: string().max(255),\n  street: string().max(1000),\n  zipcode: string().max(255),\n  country: string()\n    .test({\n      name: \"check-country\",\n      exclusive: true,\n      params: {},\n      message: \"Please select a valid country\",\n      test: function (value) {\n        return value ? isNumeric(value) : false;\n      },\n    })\n    .transform((value) => (!value ? undefined : value)),\n});\n\nconst form = useForm({\n  validationSchema,\n  initialValues: {\n    city: \"\",\n    street: \"\",\n    zipcode: \"\",\n    country: \"\",\n  },\n});\n\nconst city = useField(\"city\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst street = useField(\"street\", undefined, {\n  validateOnValueUpdate: true,\n});\n\nconst zipcode = useField(\"zipcode\", undefined, {\n  validateOnValueUpdate: true,\n});\n\nconst country = useField(\"country\", undefined, {\n  validateOnValueUpdate: true,\n});\n</script>\n<style lang=\"scss\" scoped>\n@use \"@/assets/scss/colors.scss\" as color;\n@use \"sass:color\" as sasscolor;\n@use \"@/assets/scss/_breakpoints.scss\" as breakpoint;\n.view.entry.accountinfo {\n  width: 100%;\n  margin-top: 30px;\n  > .basic_info {\n    > p {\n      > .basic {\n        font-size: 25px;\n        font-weight: bold;\n        color: color.$main-green;\n      }\n    }\n    .form {\n      width: 100%;\n      // flex-direction: column;\n      // align-items: center;\n      //   overflow: hidden;\n      //   overflow-y: auto;\n      //   height: calc(80vh - 150px);\n\n      @include breakpoint.respond-below(sm) {\n        margin: 0;\n      }\n\n      > * {\n        display: flex;\n        width: 100%;\n        margin: 30px 0 0 0;\n      }\n\n      > .create {\n        justify-content: center;\n        color: color.$black-1;\n        border-radius: 10px;\n        font-size: 14px;\n        white-space: nowrap;\n\n        > .link {\n          display: inline-flex;\n          margin: 0 0 0 5px;\n          color: color.$purple;\n          text-decoration: none;\n        }\n      }\n\n      > .privacy_policy,\n      > .terms_of_use {\n        position: relative;\n        margin: 30px 0 0 0;\n        display: flex;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n        width: 100%;\n\n        > * {\n          display: inline-flex;\n          justify-content: flex-start;\n          align-items: center;\n        }\n\n        > label {\n          color: color.$brown-1;\n          font-size: 14px;\n          cursor: pointer;\n\n          // > input {\n          //   display: inline-flex;\n          //   position: absolute;\n          //   opacity: 0;\n          //   z-index: 0;\n          // }\n\n          // > .icon {\n          //   display: inline-flex;\n          //   min-width: 16px;\n          //   max-width: 16px;\n          //   min-height: 16px;\n          //   max-height: 16px;\n          //   z-index: 1;\n          //   transform: scale(0.9);\n          //   margin: 0 10px 0 0;\n          //   flex-shrink: 0;\n          //   border: 1px solid #c85310;\n          //   border-radius: 3.5px;\n\n          //   @include breakpoint.respond-below(xi) {\n          //     margin: 0 5px 0 0;\n          //   }\n\n          //   rect {\n          //     stroke: none;\n          //   }\n          // }\n\n          > .text {\n            color: rgba(color.$black-1, 0.8);\n\n            > .link {\n              cursor: pointer;\n              outline: initial;\n              color: color.$purple;\n              font-size: 14px;\n              text-transform: capitalize;\n              text-decoration: underline;\n\n              &:hover {\n                color: rgba(color.$brown-1, 1);\n              }\n            }\n\n            > .error,\n            > .info {\n              display: flex;\n              width: 100%;\n              justify-content: flex-start;\n              align-items: center;\n              font-size: 12px;\n              font-weight: normal;\n              color: rgba(color.$ash-1, 0.7);\n              margin: 8px 0 0 0;\n              flex-wrap: wrap;\n            }\n\n            > .error {\n              color: color.$red-1;\n            }\n          }\n        }\n      }\n\n      > .grouped {\n        display: flex;\n        justify-content: space-between;\n        > .group {\n          flex-direction: column;\n\n          &.small {\n            width: 46%;\n          }\n\n          > * {\n            display: flex;\n            width: 100%;\n            justify-content: flex-start;\n          }\n\n          > label {\n            margin: 0;\n            font-weight: normal;\n            text-transform: capitalize;\n            font-size: 14px;\n            font-weight: 600;\n\n            @include breakpoint.respond-below(sm) {\n              font-size: 16px;\n            }\n          }\n\n          > .date {\n            > .group {\n              width: 100%;\n              flex-direction: column;\n\n              > * {\n                display: flex;\n                width: 100%;\n                justify-content: flex-start;\n              }\n\n              > label {\n                margin: 0;\n                font-weight: normal;\n                text-transform: capitalize;\n                font-size: 14px;\n                font-weight: 600;\n\n                @include breakpoint.respond-below(sm) {\n                  font-size: 16px;\n                }\n              }\n\n              > .input-icon {\n                border: none;\n                position: relative;\n                align-items: center;\n                margin: 6px 0 0 0;\n\n                > input {\n                  width: 100%;\n                  height: 43px;\n                  padding: 0 0 0 30px;\n                  font-size: 13px;\n                  color: color.$ash-1;\n                  border: 1px solid rgba(color.$ash-7, 0.8);\n                  border-radius: 7px;\n                  transition: all 0.3s ease-in-out;\n                  outline: initial;\n\n                  &:focus {\n                    box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n                  }\n                }\n\n                > .icon {\n                  width: 20px;\n                  height: 20px;\n                  position: absolute;\n                  right: 30px;\n                  color: color.$ash-2;\n                  transition: all 0.3s ease-in-out;\n\n                  &.toggle {\n                    cursor: pointer;\n                  }\n                }\n\n                &.has-error {\n                  > input {\n                    border-color: color.$red-1;\n                  }\n\n                  > .icon {\n                    color: color.$red-1;\n                  }\n                }\n\n                > .error {\n                  display: flex;\n                  width: 100%;\n                  justify-content: flex-start;\n                  align-items: center;\n                  font-size: 12px;\n                  font-weight: normal;\n                  color: color.$red-1;\n                  margin: 8px 0 0 0;\n                  flex-wrap: wrap;\n                }\n              }\n            }\n          }\n\n          > .input-icon {\n            border: none;\n            position: relative;\n            align-items: center;\n            margin: 6px 0 0 0;\n\n            > input {\n              width: 100%;\n              height: 50px;\n              padding: 0 0 0 30px;\n              font-size: 13px;\n              color: color.$ash-1;\n              border: 1px solid color.$ash-7;\n              border-radius: 7px;\n              transition: all 0.3s ease-in-out;\n              outline: initial;\n\n              &:focus {\n                box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n              }\n\n              &:not(:placeholder-shown) {\n                & ~ .edge-text {\n                  display: none;\n                }\n              }\n            }\n\n            > .icon {\n              width: 20px;\n              height: 20px;\n              position: absolute;\n              right: 30px;\n              color: color.$ash-2;\n              transition: all 0.3s ease-in-out;\n\n              &.toggle {\n                cursor: pointer;\n              }\n            }\n\n            > .edge-text {\n              padding: 3px;\n              position: absolute;\n              right: 30px;\n              font-size: 13px;\n              display: flex;\n              color: color.$ash-1;\n              text-transform: capitalize;\n            }\n\n            &.has-error {\n              > input {\n                border-color: color.$red-1;\n              }\n\n              > .icon {\n                color: color.$red-1;\n              }\n            }\n          }\n\n          > .error {\n            display: flex;\n            width: 100%;\n            justify-content: flex-start;\n            align-items: center;\n            font-size: 12px;\n            font-weight: normal;\n            color: color.$red-1;\n            margin: 8px 0 0 0;\n            flex-wrap: wrap;\n          }\n        }\n      }\n\n      > .btn {\n        margin-top: 40px;\n        width: 100%;\n        display: flex;\n        justify-content: flex-end;\n\n        > * {\n          padding: 12px 36px;\n          border-radius: 6px;\n          outline: none;\n          border-style: none;\n          cursor: pointer;\n          transition: all 0.3s ease-in-out;\n\n          &:hover:not(:disabled) {\n            box-shadow: 1px 1px 5px 0 color.$ash-1;\n          }\n        }\n        > .cancel {\n          margin-right: 8px;\n        }\n\n        > .save {\n          background-color: color.$main-green;\n          color: color.$white-1;\n        }\n      }\n\n      > .group {\n        flex-direction: column;\n\n        &.small {\n          width: 46%;\n        }\n\n        > * {\n          display: flex;\n          width: 100%;\n          justify-content: flex-start;\n        }\n\n        > label {\n          margin: 0;\n          font-weight: normal;\n          text-transform: capitalize;\n          font-size: 14px;\n          font-weight: 600;\n\n          @include breakpoint.respond-below(sm) {\n            font-size: 16px;\n          }\n        }\n\n        > .input-icon {\n          border: none;\n          position: relative;\n          align-items: center;\n          margin: 6px 0 0 0;\n\n          > input {\n            width: 100%;\n            height: 50px;\n            padding: 0 0 0 30px;\n            font-size: 13px;\n            color: color.$ash-1;\n            border: 1px solid color.$ash-7;\n            border-radius: 7px;\n            transition: all 0.3s ease-in-out;\n            outline: initial;\n\n            &:focus {\n              box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n            }\n\n            &:not(:placeholder-shown) {\n              & ~ .edge-text {\n                display: none;\n              }\n            }\n          }\n\n          > .icon {\n            width: 20px;\n            height: 20px;\n            position: absolute;\n            right: 30px;\n            color: color.$ash-2;\n            transition: all 0.3s ease-in-out;\n\n            &.toggle {\n              cursor: pointer;\n            }\n          }\n\n          > .edge-text {\n            padding: 3px;\n            position: absolute;\n            right: 30px;\n            font-size: 13px;\n            display: flex;\n            color: color.$ash-1;\n            text-transform: capitalize;\n          }\n\n          &.has-error {\n            > input {\n              border-color: color.$red-1;\n            }\n\n            > .icon {\n              color: color.$red-1;\n            }\n          }\n        }\n\n        > .error {\n          display: flex;\n          width: 100%;\n          justify-content: flex-start;\n          align-items: center;\n          font-size: 12px;\n          font-weight: normal;\n          color: color.$red-1;\n          margin: 8px 0 0 0;\n          flex-wrap: wrap;\n        }\n      }\n\n      > .information {\n        width: 100%;\n        background-color: color.$ash-3;\n        font-size: 13px;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        color: color.$ash-1;\n        padding: 10px 20px;\n        flex-wrap: wrap;\n\n        > a {\n          margin: 0 5px;\n          color: color.$main-green;\n        }\n      }\n\n      > .submitBtn {\n        width: 100%;\n        margin: 40px 0 0 0;\n        justify-content: center;\n        align-items: center;\n        background-color: color.$main-green;\n        color: #fff;\n        border-radius: 10px;\n        font-size: 17px;\n        white-space: nowrap;\n        text-transform: capitalize;\n        padding: 15px;\n        outline: initial;\n        border: initial;\n        transition: all 0.3s ease-in-out;\n        cursor: pointer;\n\n        &:disabled {\n          background-color: color.$ash-3;\n          color: color.$black-1;\n          cursor: not-allowed;\n        }\n\n        &:hover:not(:disabled) {\n          box-shadow: 1px 1px 5px 0 color.$ash-1;\n        }\n\n        @include breakpoint.respond-below(msl) {\n          width: 100%;\n          font-size: 16px;\n        }\n\n        @include breakpoint.respond-below(sm) {\n          font-size: 16px;\n        }\n      }\n    }\n  }\n}\n</style>\n","<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div class=\"view entry account\">\n    <h3>\n      Account Details <span>Patient</span\n      ><font-awesome-icon icon=\"fa-solid fa-user-doctor\" class=\"icon\" />\n    </h3>\n    <div class=\"basic_info\">\n      <p>\n        <span class=\"basic\">Basic info</span\n        ><span class=\"sub\">(Same as Patient)</span>\n      </p>\n      <div class=\"form\">\n        <div class=\"grouped\">\n          <div class=\"group small\">\n            <label for=\"name\">First Name</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': name.errorMessage.value }\"\n            >\n              <input\n                id=\"name\"\n                v-model=\"name.value.value\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First Name\"\n              />\n              <!-- <span class=\"edge-text\"> Last name </span> -->\n            </span>\n            <div v-if=\"name.errorMessage.value\" class=\"error\">\n              {{ name.errorMessage.value }}\n            </div>\n          </div>\n\n          <div class=\"group small\">\n            <label for=\"name\">Last Name</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': lastName.errorMessage.value }\"\n            >\n              <input\n                id=\"name\"\n                v-model=\"lastName.value.value\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Last Name\"\n              />\n              <!-- <span class=\"edge-text\"> Last name </span> -->\n            </span>\n            <div v-if=\"lastName.errorMessage.value\" class=\"error\">\n              {{ lastName.errorMessage.value }}\n            </div>\n          </div>\n        </div>\n        <div class=\"grouped\">\n          <div class=\"group small\">\n            <label for=\"name\">Username</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': username.errorMessage.value }\"\n            >\n              <input\n                id=\"username\"\n                v-model=\"username.value.value\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"First Name\"\n              />\n              <!-- <span class=\"edge-text\"> Last name </span> -->\n            </span>\n            <div v-if=\"username.errorMessage.value\" class=\"error\">\n              {{ username.errorMessage.value }}\n            </div>\n          </div>\n\n          <div class=\"group small\">\n            <label for=\"name\">Birthdate</label>\n            <div class=\"date\">\n              <date-picker\n                v-model=\"dob.value.value\"\n                color=\"#58C294\"\n                mode=\"date\"\n                class=\"group closing-date\"\n                :input-debounce=\"200\"\n                :masks=\"{\n                  input: 'DD/MM/YYYY',\n                }\"\n              >\n                <template v-slot=\"{ inputValue, inputEvents, togglePopover }\">\n                  <span class=\"input-icon\">\n                    <input\n                      id=\"closingDate\"\n                      :value=\"inputValue\"\n                      type=\"text\"\n                      name=\"closingDate\"\n                      placeholder=\"DD/MM/YYYY\"\n                      v-on=\"inputEvents\"\n                    />\n                    <svg\n                      class=\"icon\"\n                      fill=\"none\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-width=\"2\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      @click=\"togglePopover\"\n                    >\n                      <path\n                        d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                      ></path>\n                    </svg>\n\n                    <!-- <icon\n                      class=\"icon\"\n                      data=\"@/assets/svg-icon/calendar.svg\"\n                      @click=\"togglePopover\"\n                    /> -->\n                  </span>\n                  <span v-if=\"dob.errorMessage.value\" class=\"error\">\n                    {{ dob.errorMessage.value }}\n                  </span>\n                </template>\n              </date-picker>\n            </div>\n          </div>\n        </div>\n        <div class=\"grouped\">\n          <div class=\"group small\">\n            <label for=\"register_password\">New Password</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': password.errorMessage.value }\"\n            >\n              <input\n                id=\"register_password\"\n                v-model=\"password.value.value\"\n                placeholder=\"new password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                name=\"password\"\n              />\n              <Icon\n                class=\"icon toggle\"\n                :data=\"getPasswordIcon(showPassword)\"\n                @click=\"showPassword = !showPassword\"\n              />\n            </span>\n            <div v-if=\"password.errorMessage.value\" class=\"error\">\n              {{ password.errorMessage.value }}\n            </div>\n          </div>\n\n          <div class=\"group small\">\n            <label for=\"register_c_password\">password confirmation</label>\n            <span\n              class=\"input-icon\"\n              :class=\"{ 'has-error': password_confirmation.errorMessage.value }\"\n            >\n              <input\n                id=\"register_c_password\"\n                v-model=\"password_confirmation.value.value\"\n                placeholder=\"Confirm password\"\n                :type=\"showConfirmPassword ? 'text' : 'password'\"\n                name=\"cpassword\"\n              />\n              <Icon\n                class=\"icon toggle\"\n                :data=\"getPasswordIcon(showConfirmPassword)\"\n                @click=\"showConfirmPassword = !showConfirmPassword\"\n              />\n            </span>\n            <div v-if=\"password_confirmation.errorMessage.value\" class=\"error\">\n              {{ password_confirmation.errorMessage.value }}\n            </div>\n          </div>\n        </div>\n        <div class=\"btn\">\n          <button class=\"cancel\">Cancel</button>\n          <button class=\"save\">Save Changes</button>\n        </div>\n      </div>\n      <AddressInfo />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { useForm, useField } from \"vee-validate\";\nimport { object, string, date } from \"yup\";\nimport { DatePicker } from \"v-calendar\";\nimport { getPasswordIcon } from \"@/utils/helpers\";\nimport AddressInfo from \"@/components/Account/AddressInfo.vue\";\n\nconst validationSchema = object({\n  name: string().required(\"Please input your first name\"),\n  lastName: string().required(\"Please input you last name\"),\n  email: string()\n    .email(\"Please input a valid email address\")\n    .required(\"Please input a valid email address\"),\n  username: string().required(\"Please input a valid username\"),\n  dob: date().transform((value) => (!value ? undefined : value)),\n  password: string().required(\"Please input a valid password\"),\n  password_confirmation: string()\n    .required(\"Please confirm your password\")\n    .test({\n      name: \"confirm_password\",\n      exclusive: true,\n      params: {},\n      message: \"Password confirmation must match password\",\n      test: function (value) {\n        return value === this.parent.password;\n      },\n    }),\n});\n\nconst form = useForm({\n  validationSchema,\n  initialValues: {\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    username: \"\",\n    dob: new Date(),\n    password: \"\",\n    password_confirmation: \"\",\n  },\n});\n\nconst name = useField(\"name\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst lastName = useField(\"lastName\", undefined, {\n  validateOnValueUpdate: true,\n});\n\nconst username = useField(\"username\", undefined, {\n  validateOnValueUpdate: true,\n});\n\nconst dob = useField(\"dob\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst password = useField(\"password\", undefined, {\n  validateOnValueUpdate: true,\n});\nconst password_confirmation = useField(\"password_confirmation\", undefined, {\n  validateOnValueUpdate: true,\n});\n\nconst showPassword = ref(false);\nconst showConfirmPassword = ref(false);\n</script>\n<style lang=\"scss\" scoped>\n@use \"@/assets/scss/colors.scss\" as color;\n@use \"sass:color\" as sasscolor;\n@use \"@/assets/scss/_breakpoints.scss\" as breakpoint;\n// ::-webkit-scrollbar {\n//   width: 20px;\n// }\n\n// /* Track */\n// ::-webkit-scrollbar-track {\n//   box-shadow: inset 0 0 5px grey;\n//   border-radius: 10px;\n// }\n\n// /* Handle */\n// ::-webkit-scrollbar-thumb {\n//   background: rgba(255, 255, 255, 0.4);\n//   border-radius: 10px;\n// }\n\n// /* Handle on hover */\n// ::-webkit-scrollbar-thumb:hover {\n//   background: color.$ash-7;\n// }\n.view.entry.account {\n  width: 100%;\n  padding-left: 100px;\n  // height: calc(100vh - 150px);\n  // overflow: hidden;\n  // overflow-y: auto;\n  > .basic_info {\n    > p {\n      > .basic {\n        font-size: 20px;\n        font-weight: bold;\n        color: color.$main-green;\n        margin-right: 6px;\n      }\n    }\n    .form {\n      width: 100%;\n      // flex-direction: column;\n      // align-items: center;\n      //   overflow: hidden;\n      //   overflow-y: auto;\n      //   height: calc(80vh - 150px);\n\n      @include breakpoint.respond-below(sm) {\n        margin: 0;\n      }\n\n      > * {\n        display: flex;\n        width: 100%;\n        margin: 30px 0 0 0;\n      }\n\n      > .create {\n        justify-content: center;\n        color: color.$black-1;\n        border-radius: 10px;\n        font-size: 14px;\n        white-space: nowrap;\n\n        > .link {\n          display: inline-flex;\n          margin: 0 0 0 5px;\n          color: color.$purple;\n          text-decoration: none;\n        }\n      }\n\n      > .privacy_policy,\n      > .terms_of_use {\n        position: relative;\n        margin: 30px 0 0 0;\n        display: flex;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n        width: 100%;\n\n        > * {\n          display: inline-flex;\n          justify-content: flex-start;\n          align-items: center;\n        }\n\n        > label {\n          color: color.$brown-1;\n          font-size: 14px;\n          cursor: pointer;\n\n          // > input {\n          //   display: inline-flex;\n          //   position: absolute;\n          //   opacity: 0;\n          //   z-index: 0;\n          // }\n\n          // > .icon {\n          //   display: inline-flex;\n          //   min-width: 16px;\n          //   max-width: 16px;\n          //   min-height: 16px;\n          //   max-height: 16px;\n          //   z-index: 1;\n          //   transform: scale(0.9);\n          //   margin: 0 10px 0 0;\n          //   flex-shrink: 0;\n          //   border: 1px solid #c85310;\n          //   border-radius: 3.5px;\n\n          //   @include breakpoint.respond-below(xi) {\n          //     margin: 0 5px 0 0;\n          //   }\n\n          //   rect {\n          //     stroke: none;\n          //   }\n          // }\n\n          > .text {\n            color: rgba(color.$black-1, 0.8);\n\n            > .link {\n              cursor: pointer;\n              outline: initial;\n              color: color.$purple;\n              font-size: 14px;\n              text-transform: capitalize;\n              text-decoration: underline;\n\n              &:hover {\n                color: rgba(color.$brown-1, 1);\n              }\n            }\n\n            > .error,\n            > .info {\n              display: flex;\n              width: 100%;\n              justify-content: flex-start;\n              align-items: center;\n              font-size: 12px;\n              font-weight: normal;\n              color: rgba(color.$ash-1, 0.7);\n              margin: 8px 0 0 0;\n              flex-wrap: wrap;\n            }\n\n            > .error {\n              color: color.$red-1;\n            }\n          }\n        }\n      }\n\n      > .grouped {\n        display: flex;\n        justify-content: space-between;\n        > .group {\n          flex-direction: column;\n\n          &.small {\n            width: 46%;\n          }\n\n          > * {\n            display: flex;\n            width: 100%;\n            justify-content: flex-start;\n          }\n\n          > label {\n            margin: 0;\n            font-weight: normal;\n            text-transform: capitalize;\n            font-size: 14px;\n            font-weight: 600;\n\n            @include breakpoint.respond-below(sm) {\n              font-size: 16px;\n            }\n          }\n\n          > .date {\n            > .group {\n              width: 100%;\n              flex-direction: column;\n\n              > * {\n                display: flex;\n                width: 100%;\n                justify-content: flex-start;\n              }\n\n              > label {\n                margin: 0;\n                font-weight: normal;\n                text-transform: capitalize;\n                font-size: 14px;\n                font-weight: 600;\n\n                @include breakpoint.respond-below(sm) {\n                  font-size: 16px;\n                }\n              }\n\n              > .input-icon {\n                border: none;\n                position: relative;\n                align-items: center;\n                margin: 6px 0 0 0;\n\n                > input {\n                  width: 100%;\n                  height: 43px;\n                  padding: 0 0 0 30px;\n                  font-size: 13px;\n                  color: color.$ash-1;\n                  border: 1px solid rgba(color.$ash-7, 0.8);\n                  border-radius: 7px;\n                  transition: all 0.3s ease-in-out;\n                  outline: initial;\n\n                  &:focus {\n                    box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n                  }\n                }\n\n                > .icon {\n                  width: 20px;\n                  height: 20px;\n                  position: absolute;\n                  right: 30px;\n                  color: color.$ash-2;\n                  transition: all 0.3s ease-in-out;\n\n                  &.toggle {\n                    cursor: pointer;\n                  }\n                }\n\n                &.has-error {\n                  > input {\n                    border-color: color.$red-1;\n                  }\n\n                  > .icon {\n                    color: color.$red-1;\n                  }\n                }\n\n                > .error {\n                  display: flex;\n                  width: 100%;\n                  justify-content: flex-start;\n                  align-items: center;\n                  font-size: 12px;\n                  font-weight: normal;\n                  color: color.$red-1;\n                  margin: 8px 0 0 0;\n                  flex-wrap: wrap;\n                }\n              }\n            }\n          }\n\n          > .input-icon {\n            border: none;\n            position: relative;\n            align-items: center;\n            margin: 6px 0 0 0;\n\n            > input {\n              width: 100%;\n              height: 50px;\n              padding: 0 0 0 30px;\n              font-size: 13px;\n              color: color.$ash-1;\n              border: 1px solid color.$ash-7;\n              border-radius: 7px;\n              transition: all 0.3s ease-in-out;\n              outline: initial;\n\n              &:focus {\n                box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n              }\n\n              &:not(:placeholder-shown) {\n                & ~ .edge-text {\n                  display: none;\n                }\n              }\n            }\n\n            > .icon {\n              width: 20px;\n              height: 20px;\n              position: absolute;\n              right: 30px;\n              color: color.$ash-2;\n              transition: all 0.3s ease-in-out;\n\n              &.toggle {\n                cursor: pointer;\n              }\n            }\n\n            > .edge-text {\n              padding: 3px;\n              position: absolute;\n              right: 30px;\n              font-size: 13px;\n              display: flex;\n              color: color.$ash-1;\n              text-transform: capitalize;\n            }\n\n            &.has-error {\n              > input {\n                border-color: color.$red-1;\n              }\n\n              > .icon {\n                color: color.$red-1;\n              }\n            }\n          }\n\n          > .error {\n            display: flex;\n            width: 100%;\n            justify-content: flex-start;\n            align-items: center;\n            font-size: 12px;\n            font-weight: normal;\n            color: color.$red-1;\n            margin: 8px 0 0 0;\n            flex-wrap: wrap;\n          }\n        }\n      }\n\n      > .btn {\n        margin-top: 40px;\n        width: 100%;\n        display: flex;\n        justify-content: flex-end;\n\n        > * {\n          padding: 12px 36px;\n          border-radius: 6px;\n          outline: none;\n          border-style: none;\n          cursor: pointer;\n          transition: all 0.3s ease-in-out;\n\n          &:hover:not(:disabled) {\n            box-shadow: 1px 1px 5px 0 color.$ash-1;\n          }\n        }\n        > .cancel {\n          margin-right: 8px;\n        }\n\n        > .save {\n          background-color: color.$main-green;\n          color: color.$white-1;\n        }\n      }\n\n      > .group {\n        flex-direction: column;\n\n        &.small {\n          width: 46%;\n        }\n\n        > * {\n          display: flex;\n          width: 100%;\n          justify-content: flex-start;\n        }\n\n        > label {\n          margin: 0;\n          font-weight: normal;\n          text-transform: capitalize;\n          font-size: 14px;\n          font-weight: 600;\n\n          @include breakpoint.respond-below(sm) {\n            font-size: 16px;\n          }\n        }\n\n        > .input-icon {\n          border: none;\n          position: relative;\n          align-items: center;\n          margin: 6px 0 0 0;\n\n          > input {\n            width: 100%;\n            height: 50px;\n            padding: 0 0 0 30px;\n            font-size: 13px;\n            color: color.$ash-1;\n            border: 1px solid color.$ash-7;\n            border-radius: 7px;\n            transition: all 0.3s ease-in-out;\n            outline: initial;\n\n            &:focus {\n              box-shadow: 1px 1px 5px 0 rgba(color.$ash-1, 0.4);\n            }\n\n            &:not(:placeholder-shown) {\n              & ~ .edge-text {\n                display: none;\n              }\n            }\n          }\n\n          > .icon {\n            width: 20px;\n            height: 20px;\n            position: absolute;\n            right: 30px;\n            color: color.$ash-2;\n            transition: all 0.3s ease-in-out;\n\n            &.toggle {\n              cursor: pointer;\n            }\n          }\n\n          > .edge-text {\n            padding: 3px;\n            position: absolute;\n            right: 30px;\n            font-size: 13px;\n            display: flex;\n            color: color.$ash-1;\n            text-transform: capitalize;\n          }\n\n          &.has-error {\n            > input {\n              border-color: color.$red-1;\n            }\n\n            > .icon {\n              color: color.$red-1;\n            }\n          }\n        }\n\n        > .error {\n          display: flex;\n          width: 100%;\n          justify-content: flex-start;\n          align-items: center;\n          font-size: 12px;\n          font-weight: normal;\n          color: color.$red-1;\n          margin: 8px 0 0 0;\n          flex-wrap: wrap;\n        }\n      }\n\n      > .information {\n        width: 100%;\n        background-color: color.$ash-3;\n        font-size: 13px;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        color: color.$ash-1;\n        padding: 10px 20px;\n        flex-wrap: wrap;\n\n        > a {\n          margin: 0 5px;\n          color: color.$main-green;\n        }\n      }\n\n      > .submitBtn {\n        width: 100%;\n        margin: 40px 0 0 0;\n        justify-content: center;\n        align-items: center;\n        background-color: color.$main-green;\n        color: #fff;\n        border-radius: 10px;\n        font-size: 17px;\n        white-space: nowrap;\n        text-transform: capitalize;\n        padding: 15px;\n        outline: initial;\n        border: initial;\n        transition: all 0.3s ease-in-out;\n        cursor: pointer;\n\n        &:disabled {\n          background-color: color.$ash-3;\n          color: color.$black-1;\n          cursor: not-allowed;\n        }\n\n        &:hover:not(:disabled) {\n          box-shadow: 1px 1px 5px 0 color.$ash-1;\n        }\n\n        @include breakpoint.respond-below(msl) {\n          width: 100%;\n          font-size: 16px;\n        }\n\n        @include breakpoint.respond-below(sm) {\n          font-size: 16px;\n        }\n      }\n    }\n  }\n}\n</style>\n"],"names":["validationSchema","object","string","value","isNumeric","useForm","city","useField","street","zipcode","country","date","name","lastName","username","dob","password","password_confirmation","showPassword","ref","showConfirmPassword"],"mappings":"6iCAuGA,MAAMA,EAAmBC,EAAO,CAC9B,KAAMC,EAAA,EAAS,IAAI,GAAG,EACtB,OAAQA,EAAA,EAAS,IAAI,GAAI,EACzB,QAASA,EAAA,EAAS,IAAI,GAAG,EACzB,QAASA,EAAO,EACb,KAAK,CACJ,KAAM,gBACN,UAAW,GACX,OAAQ,CAAC,EACT,QAAS,gCACT,KAAM,SAAUC,EAAO,CACd,OAAAA,EAAQC,EAAUD,CAAK,EAAI,EACpC,CAAA,CACD,EACA,UAAWA,GAAYA,GAAQ,MAAkB,CAAA,CACrD,EAEYE,EAAQ,CACnB,iBAAAL,EACA,cAAe,CACb,KAAM,GACN,OAAQ,GACR,QAAS,GACT,QAAS,EACX,CAAA,CACD,EAEK,MAAAM,EAAOC,EAAS,OAAQ,OAAW,CACvC,sBAAuB,EAAA,CACxB,EACKC,EAASD,EAAS,SAAU,OAAW,CAC3C,sBAAuB,EAAA,CACxB,EAEKE,EAAUF,EAAS,UAAW,OAAW,CAC7C,sBAAuB,EAAA,CACxB,EAEKG,EAAUH,EAAS,UAAW,OAAW,CAC7C,sBAAuB,EAAA,CACxB,yyFCkDD,MAAMP,EAAmBC,EAAO,CAC9B,KAAMC,EAAA,EAAS,SAAS,8BAA8B,EACtD,SAAUA,EAAA,EAAS,SAAS,4BAA4B,EACxD,MAAOA,EAAO,EACX,MAAM,oCAAoC,EAC1C,SAAS,oCAAoC,EAChD,SAAUA,EAAA,EAAS,SAAS,+BAA+B,EAC3D,IAAKS,EAAO,EAAA,UAAWR,GAAYA,GAAQ,MAAkB,EAC7D,SAAUD,EAAA,EAAS,SAAS,+BAA+B,EAC3D,sBAAuBA,EAAO,EAC3B,SAAS,8BAA8B,EACvC,KAAK,CACJ,KAAM,mBACN,UAAW,GACX,OAAQ,CAAC,EACT,QAAS,4CACT,KAAM,SAAUC,EAAO,CACd,OAAAA,IAAU,KAAK,OAAO,QAC/B,CAAA,CACD,CAAA,CACJ,EAEYE,EAAQ,CACnB,iBAAAL,EACA,cAAe,CACb,KAAM,GACN,SAAU,GACV,MAAO,GACP,SAAU,GACV,IAAK,IAAI,KACT,SAAU,GACV,sBAAuB,EACzB,CAAA,CACD,EAEK,MAAAY,EAAOL,EAAS,OAAQ,OAAW,CACvC,sBAAuB,EAAA,CACxB,EACKM,EAAWN,EAAS,WAAY,OAAW,CAC/C,sBAAuB,EAAA,CACxB,EAEKO,EAAWP,EAAS,WAAY,OAAW,CAC/C,sBAAuB,EAAA,CACxB,EAEKQ,EAAMR,EAAS,MAAO,OAAW,CACrC,sBAAuB,EAAA,CACxB,EACKS,EAAWT,EAAS,WAAY,OAAW,CAC/C,sBAAuB,EAAA,CACxB,EACKU,EAAwBV,EAAS,wBAAyB,OAAW,CACzE,sBAAuB,EAAA,CACxB,EAEKW,EAAeC,EAAI,EAAK,EACxBC,EAAsBD,EAAI,EAAK"}